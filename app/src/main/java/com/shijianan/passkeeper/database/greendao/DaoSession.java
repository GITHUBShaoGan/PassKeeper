package com.shijianan.passkeeper.database.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.shijianan.passkeeper.database.entity.UserConfig;
import com.shijianan.passkeeper.database.entity.BankCardPassword;
import com.shijianan.passkeeper.database.entity.OtherPassword;
import com.shijianan.passkeeper.database.entity.Password;
import com.shijianan.passkeeper.database.entity.ServerPassword;
import com.shijianan.passkeeper.database.entity.WebPassword;
import com.shijianan.passkeeper.database.entity.WifiPassword;

import com.shijianan.passkeeper.database.greendao.UserConfigDao;
import com.shijianan.passkeeper.database.greendao.BankCardPasswordDao;
import com.shijianan.passkeeper.database.greendao.OtherPasswordDao;
import com.shijianan.passkeeper.database.greendao.PasswordDao;
import com.shijianan.passkeeper.database.greendao.ServerPasswordDao;
import com.shijianan.passkeeper.database.greendao.WebPasswordDao;
import com.shijianan.passkeeper.database.greendao.WifiPasswordDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userConfigDaoConfig;
    private final DaoConfig bankCardPasswordDaoConfig;
    private final DaoConfig otherPasswordDaoConfig;
    private final DaoConfig passwordDaoConfig;
    private final DaoConfig serverPasswordDaoConfig;
    private final DaoConfig webPasswordDaoConfig;
    private final DaoConfig wifiPasswordDaoConfig;

    private final UserConfigDao userConfigDao;
    private final BankCardPasswordDao bankCardPasswordDao;
    private final OtherPasswordDao otherPasswordDao;
    private final PasswordDao passwordDao;
    private final ServerPasswordDao serverPasswordDao;
    private final WebPasswordDao webPasswordDao;
    private final WifiPasswordDao wifiPasswordDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userConfigDaoConfig = daoConfigMap.get(UserConfigDao.class).clone();
        userConfigDaoConfig.initIdentityScope(type);

        bankCardPasswordDaoConfig = daoConfigMap.get(BankCardPasswordDao.class).clone();
        bankCardPasswordDaoConfig.initIdentityScope(type);

        otherPasswordDaoConfig = daoConfigMap.get(OtherPasswordDao.class).clone();
        otherPasswordDaoConfig.initIdentityScope(type);

        passwordDaoConfig = daoConfigMap.get(PasswordDao.class).clone();
        passwordDaoConfig.initIdentityScope(type);

        serverPasswordDaoConfig = daoConfigMap.get(ServerPasswordDao.class).clone();
        serverPasswordDaoConfig.initIdentityScope(type);

        webPasswordDaoConfig = daoConfigMap.get(WebPasswordDao.class).clone();
        webPasswordDaoConfig.initIdentityScope(type);

        wifiPasswordDaoConfig = daoConfigMap.get(WifiPasswordDao.class).clone();
        wifiPasswordDaoConfig.initIdentityScope(type);

        userConfigDao = new UserConfigDao(userConfigDaoConfig, this);
        bankCardPasswordDao = new BankCardPasswordDao(bankCardPasswordDaoConfig, this);
        otherPasswordDao = new OtherPasswordDao(otherPasswordDaoConfig, this);
        passwordDao = new PasswordDao(passwordDaoConfig, this);
        serverPasswordDao = new ServerPasswordDao(serverPasswordDaoConfig, this);
        webPasswordDao = new WebPasswordDao(webPasswordDaoConfig, this);
        wifiPasswordDao = new WifiPasswordDao(wifiPasswordDaoConfig, this);

        registerDao(UserConfig.class, userConfigDao);
        registerDao(BankCardPassword.class, bankCardPasswordDao);
        registerDao(OtherPassword.class, otherPasswordDao);
        registerDao(Password.class, passwordDao);
        registerDao(ServerPassword.class, serverPasswordDao);
        registerDao(WebPassword.class, webPasswordDao);
        registerDao(WifiPassword.class, wifiPasswordDao);
    }
    
    public void clear() {
        userConfigDaoConfig.getIdentityScope().clear();
        bankCardPasswordDaoConfig.getIdentityScope().clear();
        otherPasswordDaoConfig.getIdentityScope().clear();
        passwordDaoConfig.getIdentityScope().clear();
        serverPasswordDaoConfig.getIdentityScope().clear();
        webPasswordDaoConfig.getIdentityScope().clear();
        wifiPasswordDaoConfig.getIdentityScope().clear();
    }

    public UserConfigDao getUserConfigDao() {
        return userConfigDao;
    }

    public BankCardPasswordDao getBankCardPasswordDao() {
        return bankCardPasswordDao;
    }

    public OtherPasswordDao getOtherPasswordDao() {
        return otherPasswordDao;
    }

    public PasswordDao getPasswordDao() {
        return passwordDao;
    }

    public ServerPasswordDao getServerPasswordDao() {
        return serverPasswordDao;
    }

    public WebPasswordDao getWebPasswordDao() {
        return webPasswordDao;
    }

    public WifiPasswordDao getWifiPasswordDao() {
        return wifiPasswordDao;
    }

}
